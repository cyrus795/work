/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: nilsausta (https://sketchfab.com/nilsausta)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/electric-motor-animated-dc-motor-explained-6229505ab04245aba55c088a3dbf2ebd
title: Electric Motor animated (DC motor explained)
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";

export default function Model({ ...props }) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("/phy_dcMotor/scene.gltf");
  const { actions } = useAnimations(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <primitive object={nodes.Armature001_rootJoint} />
        <skinnedMesh
          geometry={nodes.rootor_0.geometry}
          material={materials["steel.001"]}
          skeleton={nodes.rootor_0.skeleton}
        />
        <skinnedMesh
          geometry={nodes.rootor_1.geometry}
          material={materials["cuprum.003"]}
          skeleton={nodes.rootor_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.rootor_2.geometry}
          material={materials["plastic.001"]}
          skeleton={nodes.rootor_2.skeleton}
        />
        <skinnedMesh
          geometry={nodes.rootor_3.geometry}
          material={materials["cubrum_lackuer.001"]}
          skeleton={nodes.rootor_3.skeleton}
        />
        <skinnedMesh
          geometry={nodes.rootor_4.geometry}
          material={materials["overlay.001"]}
          skeleton={nodes.rootor_4.skeleton}
        />
        <skinnedMesh
          geometry={nodes.rootor_5.geometry}
          material={materials["plastic_dirty.001"]}
          skeleton={nodes.rootor_5.skeleton}
        />
        <skinnedMesh
          geometry={nodes.rootor_6.geometry}
          material={materials["cuprum_dirty.001"]}
          skeleton={nodes.rootor_6.skeleton}
        />
        <primitive object={nodes.Armature_rootJoint} />
        <group position={[0.64, -1.25, 0]}>
          <mesh
            geometry={nodes.brushes001_0.geometry}
            material={materials.ref_cuprum}
          />
        </group>
        <group
          position={[-6.07, 0.48, 2.21]}
          rotation={[-Math.PI / 2, 0, 1.09]}
          scale={[0.18, 0.18, 0.9]}
        >
          <mesh
            geometry={nodes.klemm_0.geometry}
            material={nodes.klemm_0.material}
          />
          <mesh
            geometry={nodes.klemm_1.geometry}
            material={nodes.klemm_1.material}
          />
        </group>
        <group position={[-5.14, -0.09, -0.86]} scale={[0.74, 0.74, 2.01]}>
          <mesh
            geometry={nodes.battery_0.geometry}
            material={materials.sydamik}
          />
          <mesh
            geometry={nodes.battery_1.geometry}
            material={materials.valge}
          />
          <mesh
            geometry={nodes.battery_2.geometry}
            material={materials["cuprum.001"]}
          />
          <mesh
            geometry={nodes.battery_3.geometry}
            material={materials["sydamik.001"]}
          />
        </group>
        <group position={[0.64, -1.25, 0]}>
          <mesh
            geometry={nodes.brushes_0.geometry}
            material={nodes.brushes_0.material}
          />
          <mesh
            geometry={nodes.brushes_1.geometry}
            material={materials.black}
          />
        </group>
        <group position={[2.35, -8.35, 5.9]} rotation={[-0.27, 0.6, 1.93]} />
        <group position={[2.35, 9.72, 5.57]} rotation={[-0.27, 0.6, 1.93]} />
        <group position={[0, -0.03, 0]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            geometry={nodes.magnet1_0.geometry}
            material={nodes.magnet1_0.material}
          />
          <mesh
            geometry={nodes.magnet1_1.geometry}
            material={nodes.magnet1_1.material}
          />
          <mesh
            geometry={nodes.magnet1_2.geometry}
            material={nodes.magnet1_2.material}
          />
        </group>
        <group
          position={[1.23, -1.25, 0.01]}
          rotation={[Math.PI / 2, Math.PI / 2, 0]}
          scale={0.17}
        >
          <mesh
            geometry={nodes.Plane_0.geometry}
            material={nodes.Plane_0.material}
          />
        </group>
        <group position={[-6.08, 2.57, 2.21]} rotation={[0, 0, -1.64]}>
          <mesh
            geometry={nodes.juhe_0.geometry}
            material={nodes.juhe_0.material}
          />
        </group>
        <group position={[-4.66, 2.57, 2.21]} rotation={[0, 0, -1.64]}>
          <mesh
            geometry={nodes.juhe001_0.geometry}
            material={nodes.juhe001_0.material}
          />
        </group>
        <group position={[0.64, -1.25, 0]}>
          <mesh
            geometry={nodes.brushes002_0.geometry}
            material={nodes.brushes002_0.material}
          />
        </group>
        <group
          position={[-4.69, 0.48, 2.42]}
          rotation={[-Math.PI / 2, 0, 2.14]}
          scale={[0.18, 0.18, 0.9]}
        >
          <mesh
            geometry={nodes.klemm001_0.geometry}
            material={nodes.klemm001_0.material}
          />
          <mesh
            geometry={nodes.klemm001_1.geometry}
            material={nodes.klemm001_1.material}
          />
        </group>
        <group position={[0, -0.46, 0]} scale={35.6}>
          <mesh
            geometry={nodes.Cube_0.geometry}
            material={materials.Material}
          />
        </group>
        <group position={[2.13, 3.57, 2.24]}>
          <mesh
            geometry={nodes.Cube001_0.geometry}
            material={nodes.Cube001_0.material}
          />
          <mesh
            geometry={nodes.Cube001_1.geometry}
            material={nodes.Cube001_1.material}
          />
          <mesh
            geometry={nodes.Cube001_2.geometry}
            material={nodes.Cube001_2.material}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/phy_dcMotor/scene.gltf");
